Index: app/src/main/java/com/example/cbr/fragments/DashboardPagePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cbr.fragments;\n\nimport com.example.cbr.models.ClientInfo;\nimport com.example.cbr.retrofit.JsonPlaceHolderApi;\nimport com.example.cbr.retrofit.RetrofitInit;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport retrofit2.Call;\nimport retrofit2.Response;\nimport retrofit2.Retrofit;\n\npublic class DashboardPagePresenter implements DashboardPageContract.Presenter {\n\n    private Retrofit retrofit;\n    private JsonPlaceHolderApi jsonPlaceHolderApi;\n\n    private DashboardPageContract.View dashboardPageView;\n\n    private HashMap<String, Double> overallRiskMap;\n\n    public DashboardPagePresenter(DashboardPageContract.View dashboardPageView) {\n\n        retrofit = RetrofitInit.getInstance();\n        jsonPlaceHolderApi = retrofit.create(JsonPlaceHolderApi.class);\n\n        this.dashboardPageView = dashboardPageView;\n\n        overallRiskMap = new HashMap<String, Double>();\n        overallRiskMap.put(\"Low risk\", Double.valueOf(0));\n        overallRiskMap.put(\"Medium risk\",Double.valueOf(0.5));\n        overallRiskMap.put(\"High risk\", Double.valueOf(3));\n        overallRiskMap.put(\"Critical risk\", Double.valueOf(11));\n\n    }\n\n\n    @Override\n    public List<ClientInfo> getTopPriority() throws IOException {\n        Call<List<ClientInfo>> call = jsonPlaceHolderApi.getClientsInfo();\n        Response<List<ClientInfo>> response = call.execute();\n\n        List<ClientInfo> priorityList = response.body();\n\n        for(ClientInfo clientInfo : priorityList) {\n            double overallRisk = 0;\n            overallRisk += overallRiskMap.get(clientInfo.getRateEducation()) +\n                    overallRiskMap.get(clientInfo.getRateHealth()) +\n                    overallRiskMap.get(clientInfo.getRateSocialStatus());\n            clientInfo.setOverallRisk(overallRisk);\n        }\n        Collections.sort(priorityList);\n        return priorityList;\n\n    }\n\n    @Override\n    public List<ClientInfo> getOutstandingReferral() throws IOException {\n        Call<List<ClientInfo>> call = jsonPlaceHolderApi.getClientsInfo();\n        Response<List<ClientInfo>> response = call.execute();\n\n        return response.body();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cbr/fragments/DashboardPagePresenter.java	(revision d7b9a8f050f32202dace34b0cb06f45a0669eb30)
+++ app/src/main/java/com/example/cbr/fragments/DashboardPagePresenter.java	(date 1615773136000)
@@ -53,6 +53,8 @@
                     overallRiskMap.get(clientInfo.getRateSocialStatus());
             clientInfo.setOverallRisk(overallRisk);
         }
+
+
         Collections.sort(priorityList);
         return priorityList;
 
@@ -63,6 +65,7 @@
         Call<List<ClientInfo>> call = jsonPlaceHolderApi.getClientsInfo();
         Response<List<ClientInfo>> response = call.execute();
 
+
         return response.body();
     }
 }
